/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define LM3 CAPS
#define RM3 BSLH
#define LM4 NUBS
#define RM4 RALT

#define LSGT NUBS
#define AB10 FSLH
#define AC10 SEMI
#define AC11 APOS
#define AC12 BSLH
#define AD10 P
#define AD11 LBKT
#define AD12 RBKT
#define AE00 TILDE
#define AE11 MINUS
#define AE12 EQUAL

#define NAVNUM 1
#define FUN 2

&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};

&sk {
    quick-release;
};

/ {
    macros {
        neo_compose: neo_compose {
            label = "ZM_neo_compose";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RM3>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp RM3>
                ;
        };

        // Release RALT, then act like &sl FUN
        sl_fun: sl_fun {
            label = "ZM_sl_fun";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_release &kp RALT>
                , <&macro_press &sl FUN>
                , <&macro_pause_for_release>
                , <&macro_release &sl FUN>
                ;
        };

        // Release NAVNUM, then act like &tog NAVNUM
        tapdance_navnum: tapdance_navnum {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sl NAVNUM>, <&tog NAVNUM>;
        };

        // ctrl: ctrl {
        //     compatible = "zmk,behavior-macro-one-param";
        //     label = "ctrl";
        //     #binding-cells = <1>;
        //     bindings
        //         = <&macro_press &kp LCTL>
        //         , <&macro_param_1to1>
        //         , <&macro_tap &kp MACRO_PLACEHOLDER>
        //         , <&macro_release &kp LCTL>
        //         ;
        // };
    };

    // Switch to NAVNUM, but if RALT is pressed, switch to FUN instead.
    navnumfun: switch_navnum_fun {
        compatible = "zmk,behavior-mod-morph";
        label = "SWITCH_NAVNUM_FUN";
        #binding-cells = <0>;
        bindings = <&tapdance_navnum>, <&sl_fun>;
        mods = <MOD_RALT>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp AC11  &kp AE00  &kp W &kp E &kp R &kp T                                                   &kp Y &kp U  &kp I     &kp O   &kp AE11  &kp AE12
            &kp Q     &kp A     &kp S &kp D &kp F &kp G                                                   &kp H &kp J  &kp K     &kp L   &kp AC10  &kp AD10
            &kp LSGT  &kp Z     &kp X &kp C &kp V &kp B    &sk AC12   &kp LGUI        &kp ESC   &kp TAB   &kp N &kp M  &kp COMMA &kp DOT &kp AB10  &kp AD11
                           &neo_compose &kp LALT &kp LCTRL &sk LSHIFT &navnumfun      &kp RET   &kp SPACE &kp BSPC &sk RALT &kp SQT
            >;
        };

        navnum_layer {
            bindings = <
            &none    &kp LC(BSPC) &kp BSPC  &kp UP    &kp DEL   &kp LC(DEL)                                                          &kp KP_DIVIDE   &kp N7   &kp N8   &kp N9   &none        &none
            &kp PGUP &kp HOME     &kp LEFT  &kp DOWN  &kp RIGHT &kp END                                                              &kp KP_MULTIPLY &kp N4   &kp N5   &kp N6   &kp KP_PLUS  &kp KP_MINUS
            &kp PGDN &kp LC(Z)    &kp LC(X) &kp LC(Q) &kp C_AC_UNDO &kp C_AC_REDO &trans &trans        &trans &trans &kp KP_LPAR     &kp N1   &kp N2   &kp N3   &kp KP_RPAR  &kp KP_DOT
                                                     &trans    &trans    &trans   &trans &tog NAVNUM   &trans &KP_N0 &trans &sl FUN &trans
            >; 
        };

        fun_layer {
            bindings = <
            &none   &none   &none           &kp C_BRI_DN    &kp C_BRI_UP    &none                                                     &kp K_CMENU &kp F7  &kp F8  &kp F9  &kp F12 &none
            &none   &none   &kp C_MUTE      &kp C_VOL_DN    &kp C_VOL_UP    &none                                                     &kp PSCRN   &kp F4  &kp F5  &kp F6  &kp F11 &none
            &none   &none   &none           &none           &none           &none     &trans       &bt BT_CLR       &trans  &trans    &none       &kp F1  &kp F2  &kp F3  &kp F10 &none
                                               &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
